/// Code generated by protocol.def.go; DO NOT EDIT.

using System.Collections.Generic;

namespace Network.sdk.Excalibur.Protocol
{
    public sealed class AccountLoginRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.AccountLogin;}
    }

    public sealed class AccountLogin : response_of<AccountLoginRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.AccountLogin;}
    }

    public sealed class AccountLogoutRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.AccountLogout;}
    }

    public sealed class AccountLogout : response_of<AccountLogoutRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.AccountLogout;}
    	public string message;
    }

    public sealed class GetUserInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetUserInfo;}
    }

    public sealed class GetUserInfo : response_of<GetUserInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetUserInfo;}
    	public User user;
    }

    public sealed class EnterDungeonRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.EnterDungeon;}
    	public string characterId;
    }

    public sealed class EnterDungeon : response_of<EnterDungeonRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.EnterDungeon;}
    	public string state;
    }

    public sealed class ExitDungeonRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExitDungeon;}
    	public string characterId;
    	public bool isSafeExit;
    }

    public sealed class ExitDungeon : response_of<ExitDungeonRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExitDungeon;}
    	public string state;
    	public uint gold;
    	public uint stashGold;
    	public uint dungeonGold;
    	public uint dungeonExtGold;
    	public List<Npc> npcList = new List<Npc>();
    	public List<Cell> itemList = new List<Cell>();
    	public List<PlainCell> itemPlainList = new List<PlainCell>();
    	public List<LocatedCell> equipmentsDiff = new List<LocatedCell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public DungeonScore dungeonScore;
    }

    public sealed class RebornRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Reborn;}
    	public string characterId;
    	public uint diamond;
    }

    public sealed class Reborn : response_of<RebornRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Reborn;}
    	public string state;
    	public uint diamond;
    }

    public sealed class EnterStageRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.EnterStage;}
    	public string characterId;
    	public int stageId;
    }

    public sealed class EnterStage : response_of<EnterStageRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.EnterStage;}
    	public string state;
    	public StageInfo stageInfo;
    }

    public sealed class ExitStageRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExitStage;}
    	public string characterId;
    	public int stageId;
    	public bool stageClear;
    	public bool isChapterEnding;
    	public DungeonStageStat stageStat;
    	public DungeonAttributeSnapshot attributeSnapshot;
    }

    public sealed class ExitStage : response_of<ExitStageRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExitStage;}
    	public string state;
    	public int bestStageId;
    }

    public sealed class BattleStartRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.BattleStart;}
    	public string characterId;
    	public int npcId;
    	public int npcTypeId;
    	public uint luckyValue;
    }

    public sealed class BattleStart : response_of<BattleStartRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.BattleStart;}
    	public string errMsg;
    	public string state;
    }

    public sealed class BattleEndRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.BattleEnd;}
    	public string characterId;
    	public int npcId;
    	public int npcType;
    	public string battleResult;
    }

    public sealed class BattleEnd : response_of<BattleEndRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.BattleEnd;}
    	public string state;
    	public uint killValueIncreased;
    	public uint killValue;
    	public uint goldIncreased;
    	public uint goldExtIncreased;
    	public uint gold;
    	public List<Cell> unpickupItems = new List<Cell>();
    	public List<Cell> allAwardItems = new List<Cell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class DestroyItemRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.DestroyItem;}
    	public string characterId;
    	public int cellIndex;
    }

    public sealed class DestroyItem : response_of<DestroyItemRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.DestroyItem;}
    }

    public sealed class ConsumItemRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ConsumItem;}
    	public string characterId;
    	public int cellIndex;
    	public uint num;
    }

    public sealed class ConsumItem : response_of<ConsumItemRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ConsumItem;}
    	public Cell cellNewStatus;
    }

    public sealed class UseItemRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.UseItem;}
    	public string characterId;
    	public int typeId;
    	public uint num;
    }

    public sealed class UseItem : response_of<UseItemRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.UseItem;}
    	public uint diamond;
    	public uint gold;
    	public uint stashGold;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class EquipRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Equip;}
    	public string characterId;
    	public int fromCellIndex;
    	public int toCellIndex;
    }

    public sealed class Equip : response_of<EquipRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Equip;}
    }

    public sealed class UnequipRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Unequip;}
    	public string characterId;
    	public int fromCellIndex;
    	public int toCellIndex;
    }

    public sealed class Unequip : response_of<UnequipRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Unequip;}
    }

    public sealed class ListOnSaleRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ListOnSale;}
    	public string characterId;
    }

    public sealed class ListOnSale : response_of<ListOnSaleRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ListOnSale;}
    	public long lastTime;
    	public long currentTime;
    	public long nextRefreshTime;
    	public List<OnSaleInfo> onSaleInfos = new List<OnSaleInfo>();
    }

    public sealed class RefreshOnSaleRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.RefreshOnSale;}
    	public string characterId;
    	public uint costGold;
    	public uint costDiamond;
    }

    public sealed class RefreshOnSale : response_of<RefreshOnSaleRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.RefreshOnSale;}
    	public uint diamond;
    }

    public sealed class PurchaseRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Purchase;}
    	public string characterId;
    	public long guid;
    	public int goodsId;
    	public int typeId;
    	public uint num;
    	public uint costGold;
    	public uint costDiamond;
    }

    public sealed class Purchase : response_of<PurchaseRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Purchase;}
    	public uint gold;
    	public uint stashGold;
    	public uint diamond;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class ListDiamondPriceRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ListDiamondPrice;}
    	public string characterId;
    }

    public sealed class ListDiamondPrice : response_of<ListDiamondPriceRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ListDiamondPrice;}
    	public List<DiamondPrice> diamondPrices = new List<DiamondPrice>();
    }

    public sealed class SubmitOrderRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.SubmitOrder;}
    	public string characterId;
    	public int goodsTypeId;
    	public uint amount;
    	public string payToken;
    }

    public sealed class SubmitOrder : response_of<SubmitOrderRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.SubmitOrder;}
    	public OrderInfo orderInfo;
    }

    public sealed class QueryOrderStatusRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.QueryOrderStatus;}
    	public string orderId;
    }

    public sealed class QueryOrderStatus : response_of<QueryOrderStatusRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.QueryOrderStatus;}
    	public OrderInfo orderInfo;
    }

    public sealed class CraftRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Craft;}
    	public string characterId;
    	public int toCraftTypeId;
    	public List<PlainCell> requires = new List<PlainCell>();
    	public uint costGold;
    	public uint costDiamond;
    }

    public sealed class Craft : response_of<CraftRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Craft;}
    	public Cell craftedItems;
    	public uint gold;
    	public uint stashGold;
    	public uint diamond;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class DecomposeRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Decompose;}
    	public string characterId;
    	public uint decomposedCellIndex;
    	public uint costGold;
    	public uint costDiamond;
    }

    public sealed class Decompose : response_of<DecomposeRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Decompose;}
    	public int typeId;
    	public uint num;
    	public uint gold;
    	public uint stashGold;
    	public uint diamond;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class EnhanceRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.Enhance;}
    	public string characterId;
    	public int toEnhanceIndex;
    	public uint costGold;
    	public uint costDiamond;
    	public List<PlainCell> requires = new List<PlainCell>();
    }

    public sealed class Enhance : response_of<EnhanceRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.Enhance;}
    	public Cell enhancedItem;
    	public uint gold;
    	public uint stashGold;
    	public uint diamond;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class LevelUpRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.LevelUp;}
    	public string characterId;
    	public int currentLevel;
    	public uint costGold;
    	public List<PlainCell> requires = new List<PlainCell>();
    }

    public sealed class LevelUp : response_of<LevelUpRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.LevelUp;}
    	public int currentLevel;
    	public uint gold;
    	public uint stashGold;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public RuneTree runeTree;
    }

    public sealed class JobUpgradeRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.JobUpgrade;}
    	public string characterId;
    	public uint costKillValue;
    	public JobStatus jobStatus;
    }

    public sealed class JobUpgrade : response_of<JobUpgradeRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.JobUpgrade;}
    	public JobTree jobTree;
    	public uint killValue;
    }

    public sealed class RuneEquipRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.RuneEquip;}
    	public string characterId;
    	public int fromCellIndex;
    	public int toCellIndex;
    }

    public sealed class RuneEquip : response_of<RuneEquipRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.RuneEquip;}
    	public RuneTree runeTree;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class RuneUnequipRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.RuneUnequip;}
    	public string characterId;
    	public int fromCellIndex;
    }

    public sealed class RuneUnequip : response_of<RuneUnequipRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.RuneUnequip;}
    	public int cellIndex;
    	public RuneTree runeTree;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class ExpandBagCellRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExpandBagCell;}
    	public string characterId;
    	public int goodsId;
    }

    public sealed class ExpandBagCell : response_of<ExpandBagCellRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExpandBagCell;}
    	public int start;
    	public int offset;
    	public uint diamond;
    }

    public sealed class PickupLootRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PickupLoot;}
    	public string characterId;
    	public List<int> from = new List<int>();
    }

    public sealed class PickupLoot : response_of<PickupLootRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PickupLoot;}
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class DestroyMultipleItemRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.DestroyMultipleItem;}
    	public string characterId;
    	public List<int> cellIndices = new List<int>();
    }

    public sealed class DestroyMultipleItem : response_of<DestroyMultipleItemRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.DestroyMultipleItem;}
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class RefreshDiamondRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.RefreshDiamond;}
    }

    public sealed class RefreshDiamond : response_of<RefreshDiamondRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.RefreshDiamond;}
    	public uint diamond;
    }

    public sealed class ListNoticeInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ListNoticeInfo;}
    	public string characterId;
    }

    public sealed class ListNoticeInfo : response_of<ListNoticeInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ListNoticeInfo;}
    	public List<NoticeInfo> noticeInfos = new List<NoticeInfo>();
    }

    public sealed class ConfirmNoticeInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ConfirmNoticeInfo;}
    	public string characterId;
    	public int noticeInfoId;
    }

    public sealed class ConfirmNoticeInfo : response_of<ConfirmNoticeInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ConfirmNoticeInfo;}
    	public uint bagGold;
    	public uint stashGold;
    	public uint diamond;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class DeleteNoticeInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.DeleteNoticeInfo;}
    	public string characterId;
    	public int noticeInfoId;
    }

    public sealed class DeleteNoticeInfo : response_of<DeleteNoticeInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.DeleteNoticeInfo;}
    }

    public sealed class GetUserStatInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetUserStatInfo;}
    }

    public sealed class GetUserStatInfo : response_of<GetUserStatInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetUserStatInfo;}
    	public StatInfo statInfo;
    }

    public sealed class UserRenameRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.UserRename;}
    	public string newName;
    }

    public sealed class UserRename : response_of<UserRenameRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.UserRename;}
    	public string nickname;
    	public uint diamond;
    }

    public sealed class PresentRedeemCodeRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PresentRedeemCode;}
    	public string characterId;
    	public string redeemCode;
    }

    public sealed class PresentRedeemCode : response_of<PresentRedeemCodeRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PresentRedeemCode;}
    	public List<Cell> awardItems = new List<Cell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class MoveItemsStashToBagRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveItemsStashToBag;}
    	public string characterId;
    	public List<int> indices = new List<int>();
    }

    public sealed class MoveItemsStashToBag : response_of<MoveItemsStashToBagRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveItemsStashToBag;}
    	public List<LocatedCell> stashDiff = new List<LocatedCell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class MoveItemsBagToStashRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveItemsBagToStash;}
    	public string characterId;
    	public List<int> indices = new List<int>();
    }

    public sealed class MoveItemsBagToStash : response_of<MoveItemsBagToStashRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveItemsBagToStash;}
    	public List<LocatedCell> stashDiff = new List<LocatedCell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class MoveGoldStashToBagRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveGoldStashToBag;}
    	public string characterId;
    	public uint gold;
    }

    public sealed class MoveGoldStashToBag : response_of<MoveGoldStashToBagRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveGoldStashToBag;}
    	public uint bagGold;
    	public uint stashGold;
    }

    public sealed class MoveGoldBagToStashRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveGoldBagToStash;}
    	public string characterId;
    	public uint gold;
    }

    public sealed class MoveGoldBagToStash : response_of<MoveGoldBagToStashRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.MoveGoldBagToStash;}
    	public uint bagGold;
    	public uint stashGold;
    }

    public sealed class DestroyItemsInStashRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.DestroyItemsInStash;}
    	public string characterId;
    	public List<int> indices = new List<int>();
    }

    public sealed class DestroyItemsInStash : response_of<DestroyItemsInStashRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.DestroyItemsInStash;}
    	public List<LocatedCell> stashDiff = new List<LocatedCell>();
    }

    public sealed class SortItemsInStashRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.SortItemsInStash;}
    }

    public sealed class SortItemsInStash : response_of<SortItemsInStashRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.SortItemsInStash;}
    	public List<LocatedCell> stashDiff = new List<LocatedCell>();
    }

    public sealed class ExpandStashCellRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExpandStashCell;}
    }

    public sealed class ExpandStashCell : response_of<ExpandStashCellRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExpandStashCell;}
    	public int start;
    	public int offset;
    	public uint diamond;
    }

    public sealed class OpenBoxRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.OpenBox;}
    	public string characterId;
    	public int typeId;
    }

    public sealed class OpenBox : response_of<OpenBoxRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.OpenBox;}
    	public List<Cell> unpickupItems = new List<Cell>();
    	public List<Cell> allAwardItems = new List<Cell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class SortItemsInBagRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.SortItemsInBag;}
    	public string characterId;
    }

    public sealed class SortItemsInBag : response_of<SortItemsInBagRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.SortItemsInBag;}
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class MarkAsReadNoticeInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.MarkAsReadNoticeInfo;}
    	public string characterId;
    	public int noticeInfoId;
    }

    public sealed class MarkAsReadNoticeInfo : response_of<MarkAsReadNoticeInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.MarkAsReadNoticeInfo;}
    }

    public sealed class GetExploreInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetExploreInfo;}
    }

    public sealed class GetExploreInfo : response_of<GetExploreInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetExploreInfo;}
    	public long serverTime;
    	public ExploreInfo exploreInfo;
    }

    public sealed class AddExploreChargeCountRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.AddExploreChargeCount;}
    	public int count;
    }

    public sealed class AddExploreChargeCount : response_of<AddExploreChargeCountRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.AddExploreChargeCount;}
    	public long serverTime;
    	public uint diamond;
    	public ExploreInfo exploreInfo;
    }

    public sealed class ReduceExploreTimeRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ReduceExploreTime;}
    	public string characterId;
    	public int exploreStageId;
    	public long reduceTime;
    }

    public sealed class ReduceExploreTime : response_of<ReduceExploreTimeRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ReduceExploreTime;}
    	public long serverTime;
    	public uint diamond;
    	public ExploreInfo exploreInfo;
    }

    public sealed class ExploreStartRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExploreStart;}
    	public string characterId;
    	public int exploreStageId;
    }

    public sealed class ExploreStart : response_of<ExploreStartRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExploreStart;}
    	public ExploreInfo exploreInfo;
    }

    public sealed class ExploreViewAwardRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExploreViewAward;}
    	public string characterId;
    	public int exploreStageId;
    }

    public sealed class ExploreViewAward : response_of<ExploreViewAwardRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExploreViewAward;}
    	public List<PlainCell> award = new List<PlainCell>();
    }

    public sealed class ExploreEndRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExploreEnd;}
    	public string characterId;
    	public string exploreCharacterId;
    	public int exploreStageId;
    }

    public sealed class ExploreEnd : response_of<ExploreEndRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ExploreEnd;}
    	public ExploreInfo exploreInfo;
    	public List<Cell> awardItems = new List<Cell>();
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class PuzzleStartRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PuzzleStart;}
    	public string characterId;
    	public int stageId;
    	public int randomSeed;
    	public int total;
    }

    public sealed class PuzzleStart : response_of<PuzzleStartRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PuzzleStart;}
    }

    public sealed class PuzzleUpdateProcessRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PuzzleUpdateProcess;}
    	public string characterId;
    	public int stageId;
    	public int process;
    }

    public sealed class PuzzleUpdateProcess : response_of<PuzzleUpdateProcessRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PuzzleUpdateProcess;}
    }

    public sealed class PuzzleEndRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PuzzleEnd;}
    	public string characterId;
    	public int stageId;
    	public int selected;
    }

    public sealed class PuzzleEnd : response_of<PuzzleEndRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PuzzleEnd;}
    }

    public sealed class ActiveNewCharacterRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.ActiveNewCharacter;}
    	public string characterId;
    	public int heroId;
    }

    public sealed class ActiveNewCharacter : response_of<ActiveNewCharacterRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.ActiveNewCharacter;}
    	public string characterId;
    	public uint diamond;
    	public uint gold;
    	public uint stashGold;
    }

    public sealed class KillCharacterRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.KillCharacter;}
    	public string characterId;
    }

    public sealed class KillCharacter : response_of<KillCharacterRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.KillCharacter;}
    	public string state;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class GetDungeonRankingInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRankingInfo;}
    	public int chapterId;
    }

    public sealed class GetDungeonRankingInfo : response_of<GetDungeonRankingInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRankingInfo;}
    	public DungeonRankingInfo info;
    }

    public sealed class GetDungeonRankingListRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRankingList;}
    	public int chapterId;
    	public int indexFrom;
    	public int count;
    }

    public sealed class GetDungeonRankingList : response_of<GetDungeonRankingListRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRankingList;}
    	public List<DungeonRankingInfo> info = new List<DungeonRankingInfo>();
    }

    public sealed class GetPersonalRankingInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetPersonalRankingInfo;}
    	public string rankingType;
    }

    public sealed class GetPersonalRankingInfo : response_of<GetPersonalRankingInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetPersonalRankingInfo;}
    	public PersonalRankingInfo info;
    }

    public sealed class GetPersonalRankingListRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetPersonalRankingList;}
    	public string rankingType;
    	public int indexFrom;
    	public int count;
    }

    public sealed class GetPersonalRankingList : response_of<GetPersonalRankingListRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetPersonalRankingList;}
    	public List<PersonalRankingInfo> info = new List<PersonalRankingInfo>();
    }

    public sealed class GetThreadCommentRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetThreadComment;}
    	public long threadId;
    	public int indexFrom;
    	public int count;
    }

    public sealed class GetThreadComment : response_of<GetThreadCommentRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetThreadComment;}
    	public List<Comment> comments = new List<Comment>();
    }

    public sealed class GetThreadHotCommentRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetThreadHotComment;}
    	public long threadId;
    	public int topN;
    }

    public sealed class GetThreadHotComment : response_of<GetThreadHotCommentRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetThreadHotComment;}
    	public List<Comment> comments = new List<Comment>();
    }

    public sealed class GetHeroThreadIdRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetHeroThreadId;}
    	public int heroId;
    }

    public sealed class GetHeroThreadId : response_of<GetHeroThreadIdRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetHeroThreadId;}
    	public long threadId;
    }

    public sealed class PostCommentRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PostComment;}
    	public long threadId;
    	public string content;
    }

    public sealed class PostComment : response_of<PostCommentRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PostComment;}
    }

    public sealed class PraiseThreadRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PraiseThread;}
    	public long threadId;
    }

    public sealed class PraiseThread : response_of<PraiseThreadRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PraiseThread;}
    }

    public sealed class PraiseCommentRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PraiseComment;}
    	public long threadId;
    	public long commentId;
    }

    public sealed class PraiseComment : response_of<PraiseCommentRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PraiseComment;}
    }

    public sealed class GetUserPropertiesRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetUserProperties;}
    	public string key;
    }

    public sealed class GetUserProperties : response_of<GetUserPropertiesRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetUserProperties;}
    	public string doc;
    }

    public sealed class SetUserPropertiesRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.SetUserProperties;}
    	public string key;
    	public string doc;
    }

    public sealed class SetUserProperties : response_of<SetUserPropertiesRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.SetUserProperties;}
    }

    public sealed class GetAchievementAwardRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetAchievementAward;}
    	public string characterId;
    	public int achievementId;
    }

    public sealed class GetAchievementAward : response_of<GetAchievementAwardRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetAchievementAward;}
    	public uint achievementScore;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public uint diamond;
    	public uint gold;
    }

    public sealed class GetOperationActivityInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetOperationActivityInfo;}
    }

    public sealed class GetOperationActivityInfo : response_of<GetOperationActivityInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetOperationActivityInfo;}
    	public long serverTime;
    	public OperationActivity operationActivity;
    }

    public sealed class GetActivtyAwardFisrtPayRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetActivtyAwardFisrtPay;}
    	public string characterId;
    }

    public sealed class GetActivtyAwardFisrtPay : response_of<GetActivtyAwardFisrtPayRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetActivtyAwardFisrtPay;}
    	public int activityId;
    	public ActivityProcessInfo processInfo;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public uint diamond;
    	public uint gold;
    }

    public sealed class GetActivtyAwardSignInFirst7DayRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetActivtyAwardSignInFirst7Day;}
    	public string characterId;
    }

    public sealed class GetActivtyAwardSignInFirst7Day : response_of<GetActivtyAwardSignInFirst7DayRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetActivtyAwardSignInFirst7Day;}
    	public int activityId;
    	public ActivityProcessInfo processInfo;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public uint diamond;
    	public uint gold;
    }

    public sealed class GetActivtyAwardSignIn30DayRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetActivtyAwardSignIn30Day;}
    	public string characterId;
    }

    public sealed class GetActivtyAwardSignIn30Day : response_of<GetActivtyAwardSignIn30DayRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetActivtyAwardSignIn30Day;}
    	public int activityId;
    	public ActivityProcessInfo processInfo;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public uint diamond;
    	public uint gold;
    }

    public sealed class GetDungeonRule1Request : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRule1;}
    	public string characterId;
    }

    public sealed class GetDungeonRule1 : response_of<GetDungeonRule1Request>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRule1;}
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class GetDungeonRule2Request : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRule2;}
    	public string characterId;
    	public int level;
    	public bool isEquiped;
    	public int cellIndex;
    }

    public sealed class GetDungeonRule2 : response_of<GetDungeonRule2Request>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetDungeonRule2;}
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    	public List<LocatedCell> equipmentsDiff = new List<LocatedCell>();
    }

    public sealed class GetVipInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetVipInfo;}
    }

    public sealed class GetVipInfo : response_of<GetVipInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GetVipInfo;}
    	public long serverTime;
    	public VipInfo vipInfo;
    }

    public sealed class VipYueKaMaterialGetAwardRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.VipYueKaMaterialGetAward;}
    	public string characterId;
    }

    public sealed class VipYueKaMaterialGetAward : response_of<VipYueKaMaterialGetAwardRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.VipYueKaMaterialGetAward;}
    	public uint diamond;
    	public List<LocatedCell> bagDiff = new List<LocatedCell>();
    }

    public sealed class PayGetCallbackUrlRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayGetCallbackUrl;}
    }

    public sealed class PayGetCallbackUrl : response_of<PayGetCallbackUrlRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayGetCallbackUrl;}
    }

    public sealed class PayPrepareRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayPrepare;}
    }

    public sealed class PayPrepare : response_of<PayPrepareRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayPrepare;}
    }

    public sealed class PayVerifyReceiptRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayVerifyReceipt;}
    }

    public sealed class PayVerifyReceipt : response_of<PayVerifyReceiptRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayVerifyReceipt;}
    }

    public sealed class PayAppleVerifyReceiptRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayAppleVerifyReceipt;}
    	public bool useSandbox;
    	public string receipt;
    	public long uid;
    	public string deviceToken;
    }

    public sealed class PayAppleVerifyReceipt : response_of<PayAppleVerifyReceiptRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayAppleVerifyReceipt;}
    	public int orderId;
    	public uint diamond;
    	public string skuType;
    }

    public sealed class PayVerifyOrderRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayVerifyOrder;}
    }

    public sealed class PayVerifyOrder : response_of<PayVerifyOrderRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayVerifyOrder;}
    }

    public sealed class PayListOrderRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayListOrder;}
    }

    public sealed class PayListOrder : response_of<PayListOrderRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayListOrder;}
    }

    public sealed class PayGooglePurchaseRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayGooglePurchase;}
    	public string purchaseInfo;
    }

    public sealed class PayGooglePurchase : response_of<PayGooglePurchaseRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayGooglePurchase;}
    	public string googleErrMsg;
    }

    public sealed class PayGoogleConsumeRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayGoogleConsume;}
    	public string orderId;
    	public string packageName;
    	public string productId;
    	public string purchaseToken;
    }

    public sealed class PayGoogleConsume : response_of<PayGoogleConsumeRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.PayGoogleConsume;}
    	public string googleErrMsg;
    }

    public sealed class GM_ActivateUserRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_ActivateUser;}
    }

    public sealed class GM_ActivateUser : response_of<GM_ActivateUserRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_ActivateUser;}
    }

    public sealed class GM_ResetUserRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_ResetUser;}
    }

    public sealed class GM_ResetUser : response_of<GM_ResetUserRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_ResetUser;}
    }

    public sealed class GM_CreateItemRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_CreateItem;}
    	public string characterId;
    	public int typeId;
    	public int starLevel;
    	public uint num;
    }

    public sealed class GM_CreateItem : response_of<GM_CreateItemRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_CreateItem;}
    	public Item newItem;
    	public uint num;
    	public int cellIndex;
    }

    public sealed class GM_SetMyMoneyRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_SetMyMoney;}
    	public uint gold;
    	public uint diamond;
    }

    public sealed class GM_SetMyMoney : response_of<GM_SetMyMoneyRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_SetMyMoney;}
    }

    public sealed class GM_ResetJobRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_ResetJob;}
    	public string characterId;
    	public uint killValue;
    }

    public sealed class GM_ResetJob : response_of<GM_ResetJobRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_ResetJob;}
    	public JobTree jobTree;
    	public uint killValue;
    }

    public sealed class GM_SetVipInfoRequest : request
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_SetVipInfo;}
    	public VipInfo vipInfo;
    }

    public sealed class GM_SetVipInfo : response_of<GM_SetVipInfoRequest>
    {
		public override Msg.Code _msgcode() { return Msg.Code.GM_SetVipInfo;}
    }

}
